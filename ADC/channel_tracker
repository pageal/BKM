from ABE_ADCPi import ADCPi
from ABE_helpers import ABEHelpers
import time
import threading
import os

class ChannelTracker():
    def __init__(self):
        self._i2c_helper = ABEHelpers()
        self._bus = self._i2c_helper.get_smbus()
        self._adc = ADCPi(self._bus, 0x68, 0x69, 12)

        
    def DisplayAll(self):
        # clear the console
        os.system('clear')
        print(time.asctime())
        for i in range(1,9):
            v = self._adc.read_voltage(i)
            print ("Channel %d: %02f" % (i,v))
        
    def TrackAll(self):
        self.DisplayAll()

        while (True):
            ch = [0, 0, 0, 0, 0, 0, 0, 0]
            display = False
            for i in range(1,9):
                v = self._adc.read_voltage(i)
                ch[i-1] = v
                if(v!=0):
                    display = True
                

            if(display == True):
                os.system('clear')
                print(time.asctime())
                for i in range(1,9):
                    v = ch[i-1]
                    print ("Channel %d: %02f" % (i,v))
                    
            time.sleep(0.01)
        
#ct = ChannelTracker()
#ct.TrackAll()
